# Autogenerated wrapper script for libmtiri2000_jll for x86_64-w64-mingw32-libgfortran3
export libmtiri2020_1, libmtiri2020_2, libmtiri2020_3, libmtiri2020_4, libmtiri2020_5, libmtiri2020_6

using CompilerSupportLibraries_jll
JLLWrappers.@generate_wrapper_header("libmtiri2000")
JLLWrappers.@declare_library_product(libmtiri2020_1, "libmtiri2020_1.dll")
JLLWrappers.@declare_library_product(libmtiri2020_2, "libmtiri2020_2.dll")
JLLWrappers.@declare_library_product(libmtiri2020_3, "libmtiri2020_3.dll")
JLLWrappers.@declare_library_product(libmtiri2020_4, "libmtiri2020_4.dll")
JLLWrappers.@declare_library_product(libmtiri2020_5, "libmtiri2020_5.dll")
JLLWrappers.@declare_library_product(libmtiri2020_6, "libmtiri2020_6.dll")
function __init__()
    JLLWrappers.@generate_init_header(CompilerSupportLibraries_jll)
    JLLWrappers.@init_library_product(
        libmtiri2020_1,
        "bin\\libmtiri2020_1.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libmtiri2020_2,
        "bin\\libmtiri2020_2.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libmtiri2020_3,
        "bin\\libmtiri2020_3.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libmtiri2020_4,
        "bin\\libmtiri2020_4.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libmtiri2020_5,
        "bin\\libmtiri2020_5.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@init_library_product(
        libmtiri2020_6,
        "bin\\libmtiri2020_6.dll",
        RTLD_LAZY | RTLD_DEEPBIND,
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
